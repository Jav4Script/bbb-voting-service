services:
  app-test:
    image: cosmtrek/air
    container_name: bbb-voting-app-test
    working_dir: /app
    ports:
      - "8081:8080"
    environment:
      - APP_ENV=test
      - APP_PORT=8081
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=test-database
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=bbb_voting_test
      - DATABASE_SCHEMA=bbb_schema_test
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_HOST=test-rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
      - VOTE_QUEUE=${VOTE_QUEUE}
      - REDIS_URL=redis://test-redis:6379/0
      - SYNC_CACHE_INTERVAL=${SYNC_CACHE_INTERVAL}
      - TEST_ENV=true
    env_file:
      - .env
    volumes:
      - .:/app
      - go_mod_cache:/go/pkg/mod
      - go_cache:/root/.cache/go-build
    depends_on:
      test-database:
        condition: service_healthy
      test-redis:
        condition: service_healthy
      test-rabbitmq:
        condition: service_healthy
    restart: always

  test-database:
    image: postgres:15
    container_name: bbb-voting-test-database
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: bbb_voting_test
      POSTGRES_MAX_CONNECTIONS: 1000
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_WORK_MEM: 16MB
      POSTGRES_MAINTENANCE_WORK_MEM: 128MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
    env_file:
      - .env
    ports:
      - "5434:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./scripts:/scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    command: 
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "shared_buffers=512MB"
      - "-c"
      - "work_mem=32MB"
      - "-c"
      - "maintenance_work_mem=128MB"
      - "-c"
      - "effective_cache_size=1GB"

  test-redis:
    image: redis:7
    container_name: bbb-voting-test-redis
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: ["redis-server", "--maxclients", "20000", "--maxmemory", "512mb", "--maxmemory-policy", "allkeys-lru"]
    restart: always

  test-rabbitmq:
    image: rabbitmq:3-management
    container_name: bbb-voting-test-rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ./scripts:/scripts
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  k6:
    image: loadimpact/k6
    container_name: k6-load-tester
    volumes:
      - ./load-test:/scripts
    entrypoint: ["sh", "-c", "k6 run /scripts/${TEST_FILE}"]
    depends_on:
      - app-test
      - test-database
    profiles:
      - load-test
    environment:
      APP_NAME: bbb-voting-app-test
      APP_PORT: 8081
      TEST_FILE: ${TEST_FILE}
    env_file:
      - .env

volumes:
  postgres_test_data:
  go_mod_cache:
  go_cache:
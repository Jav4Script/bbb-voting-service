services:
  app:
    image: cosmtrek/air
    container_name: bbb-voting-app
    working_dir: /app
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=${APP_ENV}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_SCHEMA=${DATABASE_SCHEMA}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
      - VOTE_QUEUE=${VOTE_QUEUE}
      - REDIS_URL=${REDIS_URL}
    env_file:
      - .env
    volumes:
      - .:/app
      - go_mod_cache:/go/pkg/mod
      - go_cache:/root/.cache/go-build
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always

  database:
    image: postgres:15
    container_name: bbb-voting-database
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:7
    container_name: bbb-voting-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: bbb-voting-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./scripts/queue-init.sh:/docker-entrypoint-initdb.d/rabbitmq-init.sh
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres_data:
  go_mod_cache:
  go_cache:
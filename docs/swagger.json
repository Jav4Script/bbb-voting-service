{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the BBB Voting System.",
        "title": "BBB Voting System API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/health": {
            "get": {
                "description": "Returns the service's status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/captcha/{captcha_id}": {
            "get": {
                "description": "Serves the CAPTCHA image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "captcha"
                ],
                "summary": "Serve CAPTCHA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CAPTCHA ID",
                        "name": "captcha_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "captcha_id and captcha_image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "CAPTCHA not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate-captcha": {
            "get": {
                "description": "Generates a new CAPTCHA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "captcha"
                ],
                "summary": "Generate CAPTCHA",
                "responses": {
                    "200": {
                        "description": "captcha_id and captcha_image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/participants": {
            "get": {
                "description": "Retrieves all participants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Get Participants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Create Participant",
                "parameters": [
                    {
                        "description": "Participant",
                        "name": "participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateParticipantDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/participants/{id}": {
            "get": {
                "description": "Retrieves a participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Get Participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Delete Participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/results/final": {
            "get": {
                "description": "Retrieves final voting results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Get Final Results",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/results/partial": {
            "get": {
                "description": "Retrieves partial voting results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Get Partial Results",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/validate-captcha": {
            "post": {
                "description": "Validates the CAPTCHA solution",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "captcha"
                ],
                "summary": "Validate CAPTCHA",
                "parameters": [
                    {
                        "description": "CAPTCHA ID and solution",
                        "name": "captcha",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ValidateCaptchaDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CAPTCHA validated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid CAPTCHA",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/votes": {
            "post": {
                "description": "Casts a vote for a participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vote"
                ],
                "summary": "Cast Vote",
                "parameters": [
                    {
                        "description": "Vote details",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CastVoteDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "CAPTCHA validation token",
                        "name": "X-Captcha-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid CAPTCHA token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CastVoteDTO": {
            "type": "object",
            "required": [
                "device",
                "ip_address",
                "participant_id",
                "region",
                "user_agent",
                "voter_id"
            ],
            "properties": {
                "device": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "participant_id": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                },
                "voter_id": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateParticipantDTO": {
            "type": "object",
            "required": [
                "age",
                "gender",
                "name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.ValidateCaptchaDTO": {
            "type": "object",
            "required": [
                "captcha_id",
                "captcha_solution"
            ],
            "properties": {
                "captcha_id": {
                    "type": "string"
                },
                "captcha_solution": {
                    "type": "string"
                }
            }
        }
    }
}
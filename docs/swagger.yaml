basePath: /
definitions:
  dtos.CastVoteDTO:
    properties:
      device:
        type: string
      ip_address:
        type: string
      participant_id:
        type: string
      region:
        type: string
      user_agent:
        type: string
      voter_id:
        type: string
    required:
    - device
    - ip_address
    - participant_id
    - region
    - user_agent
    - voter_id
    type: object
  dtos.CreateParticipantDTO:
    properties:
      age:
        type: integer
      gender:
        type: string
      name:
        type: string
    required:
    - age
    - gender
    - name
    type: object
  dtos.ValidateCaptchaDTO:
    properties:
      captcha_id:
        type: string
      captcha_solution:
        type: string
    required:
    - captcha_id
    - captcha_solution
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API for the BBB Voting System.
  title: BBB Voting System API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Returns the service's status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
      tags:
      - health
  /v1/captcha/{captcha_id}:
    get:
      consumes:
      - application/json
      description: Serves the CAPTCHA image
      parameters:
      - description: CAPTCHA ID
        in: path
        name: captcha_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: captcha_id and captcha_image
          schema:
            additionalProperties: true
            type: object
        "404":
          description: CAPTCHA not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Serve CAPTCHA
      tags:
      - captcha
  /v1/generate-captcha:
    get:
      consumes:
      - application/json
      description: Generates a new CAPTCHA
      produces:
      - application/json
      responses:
        "200":
          description: captcha_id and captcha_image
          schema:
            additionalProperties: true
            type: object
      summary: Generate CAPTCHA
      tags:
      - captcha
  /v1/participants:
    get:
      consumes:
      - application/json
      description: Retrieves all participants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
      summary: Get Participants
      tags:
      - participants
    post:
      consumes:
      - application/json
      description: Creates a participant
      parameters:
      - description: Participant
        in: body
        name: participant
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateParticipantDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
      summary: Create Participant
      tags:
      - participants
  /v1/participants/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a participant
      parameters:
      - description: Participant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete Participant
      tags:
      - participants
    get:
      consumes:
      - application/json
      description: Retrieves a participant
      parameters:
      - description: Participant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get Participant
      tags:
      - participants
  /v1/results/final:
    get:
      consumes:
      - application/json
      description: Retrieves final voting results
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get Final Results
      tags:
      - results
  /v1/results/partial:
    get:
      consumes:
      - application/json
      description: Retrieves partial voting results
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Partial Results
      tags:
      - results
  /v1/validate-captcha:
    post:
      consumes:
      - application/json
      description: Validates the CAPTCHA solution
      parameters:
      - description: CAPTCHA ID and solution
        in: body
        name: captcha
        required: true
        schema:
          $ref: '#/definitions/dtos.ValidateCaptchaDTO'
      produces:
      - application/json
      responses:
        "200":
          description: CAPTCHA validated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Invalid CAPTCHA
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Validate CAPTCHA
      tags:
      - captcha
  /v1/votes:
    post:
      consumes:
      - application/json
      description: Casts a vote for a participant
      parameters:
      - description: Vote details
        in: body
        name: vote
        required: true
        schema:
          $ref: '#/definitions/dtos.CastVoteDTO'
      - description: CAPTCHA validation token
        in: header
        name: X-Captcha-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Invalid CAPTCHA token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cast Vote
      tags:
      - vote
schemes:
- http
- https
swagger: "2.0"
